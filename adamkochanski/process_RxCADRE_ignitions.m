%script for processing RxCADRE ignitions and time conversion
clear all;
sim_start_h=15;   %simulation start time - hours 15:00:00
sim_start_m=0;    %simulation start time - minutes
sim_start_s=0;    %simulation start time -seconds
ign_radius=10;    %ignition radius [m] - thickness of the ignition line

%define kml files containg ATV ignition lines and wrfoutput defining the domain
kml1='/share_home/akochans/fasmee/KML/L2F_Fire1.kml';
kml2='/share_home/akochans/fasmee/KML/L2F_Fire2.kml';
wrfoutput='/bigdisk/jmandel/wfc-from-web-2016-10-17_14-48-31-rxcadre-run/wrfout_d04_2012-11-11_15:00:00';
%define the missing ignition line provided in xls file
xls_file='/share_home/akochans/fasmee/KML/ATV_missing_ignition_seconds.xls';

%define model domain
display(strcat('processing domain data from  ',wrfoutput))
dom_RxCADRE=load_domain(wrfoutput);

%read kml files
display(strcat('reading in ignition kml files: ',kml1,kml2))

k1=kml2struct(kml1);
k2=kml2struct(kml2);

%compute ignition structires
ign1 = kml2ign(k1,dom_RxCADRE);
ign2 = kml2ign(k2,dom_RxCADRE);

%get the name of the kml points (encoding time) from ign structure
%generated by kml2ign, and convert names to numbers like 180256
display('processing ignition times...')

for t=1:size(ign1,2)
time1(t)=str2num(ign1(t).Name);
end

for t=1:size(ign2,2)
time2(t)=str2num(ign2(t).Name);
end

%extract number of hours
time_h1=floor(time1/10000);
time_h2=floor(time2/10000);

%extract number of minutes
time_m1=floor((time1-180000)/100);
time_m2=floor((time2-180000)/100);

%get number of seconds 
time_s1=time1-time_h1*10000-time_m1*100;
time_s2=time2-time_h2*10000-time_m2*100;

%compute total time in seconds
ignition_time1=(time_h1-sim_start_h)*3600 + (time_m1-sim_start_m)*60 + time_s1-sim_start_s;
ignition_time2=(time_h2-sim_start_h)*3600 + (time_m2-sim_start_m)*60 + time_s2-sim_start_s;

%update time in ign1 and ign2
for t=1:size(ign1,2)
ign1(t).t=ignition_time1(t);
ign1(t).radius=ign_radius;
end

for t=1:size(ign2,2)
ign2(t).t=ignition_time2(t);
ign2(t).radius=ign_radius;
end

%generate arrival time matrices
tign1=make_tign(ign1,dom_RxCADRE);
tign2=make_tign(ign2,dom_RxCADRE);

display('processing of kml ignition lines done!')
%------------------------------------------------------
%process the missing ignition line provided as xls file
display(strcat('processing the missing ignition line from xls file:  ',xls_file))

ign3=xls2ign(xls_file);

%update ignition radius (time in xls file is already in sec from 15:00UTC)
for t=1:size(ign3,2)
%ign3(t).t=
ign3(t).radius=ign_radius;
end

tign3=make_tign(ign3,dom_RxCADRE);
display('processing of missing xls ignition line done!')

%put all three ignition lines together
tign_all=tign1;
tign_all(tign2<2e8)=tign2(tign2<2e8);
tign_all(tign3<2e8)=tign3(tign3<2e8);

display('Done, all ignitions saved as tign_all matrix, write it to your wrfinput file. For instance, by ncwrite("your_wrfinput","TIGN_G",tign_all)')
